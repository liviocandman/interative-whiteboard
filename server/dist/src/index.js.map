{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import express from \"express\";\r\nimport http from \"http\";\r\nimport cors from \"cors\";\r\nimport dotenv from \"dotenv\";\r\nimport { Server } from \"socket.io\";\r\nimport { initRedis } from \"./config/redis\";\r\nimport { setupSocket } from \"./socket/setupSocket\";\r\nimport healthRouter from \"./routes/rooms\";\r\n\r\ndotenv.config();\r\n\r\nasync function startServer() {\r\n  await initRedis();\r\n\r\n  const app = express();\r\n  const server = http.createServer(app);\r\n  const io = new Server(server, {\r\n    cors: { origin: \"*\", methods: [\"GET\", \"POST\"] },\r\n  });\r\n\r\n  app.use(cors());\r\n  app.use(express.json());\r\n  app.use(\"/health\", healthRouter);\r\n\r\n  await setupSocket(io);\r\n\r\n  const PORT = process.env.PORT || 4000;\r\n  server.listen(PORT, () => {\r\n    console.log(`ðŸš€ Servidor rodando em http://localhost:${PORT}`);\r\n  });\r\n}\r\n\r\nstartServer().catch((err) => {\r\n  console.error(\"Erro ao iniciar servidor:\", err);\r\n  process.exit(1);\r\n});\r\n"],"names":["dotenv","config","startServer","initRedis","app","express","server","http","createServer","io","Server","cors","origin","methods","use","json","healthRouter","setupSocket","PORT","process","env","listen","console","log","catch","err","error","exit"],"mappings":";;;;gEAAoB;6DACH;6DACA;+DACE;0BACI;uBACG;6BACE;8DACH;;;;;;AAEzBA,eAAM,CAACC,MAAM;AAEb,eAAeC;IACb,MAAMC,IAAAA,gBAAS;IAEf,MAAMC,MAAMC,IAAAA,gBAAO;IACnB,MAAMC,SAASC,aAAI,CAACC,YAAY,CAACJ;IACjC,MAAMK,KAAK,IAAIC,gBAAM,CAACJ,QAAQ;QAC5BK,MAAM;YAAEC,QAAQ;YAAKC,SAAS;gBAAC;gBAAO;aAAO;QAAC;IAChD;IAEAT,IAAIU,GAAG,CAACH,IAAAA,aAAI;IACZP,IAAIU,GAAG,CAACT,gBAAO,CAACU,IAAI;IACpBX,IAAIU,GAAG,CAAC,WAAWE,cAAY;IAE/B,MAAMC,IAAAA,wBAAW,EAACR;IAElB,MAAMS,OAAOC,QAAQC,GAAG,CAACF,IAAI,IAAI;IACjCZ,OAAOe,MAAM,CAACH,MAAM;QAClBI,QAAQC,GAAG,CAAC,CAAC,wCAAwC,EAAEL,MAAM;IAC/D;AACF;AAEAhB,cAAcsB,KAAK,CAAC,CAACC;IACnBH,QAAQI,KAAK,CAAC,6BAA6BD;IAC3CN,QAAQQ,IAAI,CAAC;AACf"}