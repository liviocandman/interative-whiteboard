{"version":3,"sources":["../../../src/services/roomService.ts"],"sourcesContent":["import { pubClient } from \"../config/redis\";\r\n\r\nexport async function createRoom(roomId: string, ttlSeconds = 3600) {\r\n  const key = `room:${roomId}:users`;\r\n  await pubClient.sAdd(key, \"\"); // cria conjunto vazio\r\n  await pubClient.expire(key, ttlSeconds);\r\n}\r\n\r\nexport async function addUserToRoom(roomId: string, userId: string) {\r\n  const key = `room:${roomId}:users`;\r\n  await pubClient.sAdd(key, userId);\r\n}\r\n\r\nexport async function removeUserFromRoom(roomId: string, userId: string) {\r\n  const key = `room:${roomId}:users`;\r\n  await pubClient.sRem(key, userId);\r\n}\r\n\r\nexport async function deleteRoom(roomId: string) {\r\n  await pubClient.del(`room:${roomId}:users`);\r\n  await pubClient.del(`room:${roomId}:state`);\r\n}\r\n\r\nexport async function getRoomUsers(roomId: string) {\r\n  return await pubClient.sMembers(`room:${roomId}:users`);\r\n}\r\n"],"names":["addUserToRoom","createRoom","deleteRoom","getRoomUsers","removeUserFromRoom","roomId","ttlSeconds","key","pubClient","sAdd","expire","userId","sRem","del","sMembers"],"mappings":";;;;;;;;;;;QAQsBA;eAAAA;;QANAC;eAAAA;;QAgBAC;eAAAA;;QAKAC;eAAAA;;QAVAC;eAAAA;;;uBAbI;AAEnB,eAAeH,WAAWI,MAAc,EAAEC,aAAa,IAAI;IAChE,MAAMC,MAAM,CAAC,KAAK,EAAEF,OAAO,MAAM,CAAC;IAClC,MAAMG,gBAAS,CAACC,IAAI,CAACF,KAAK,KAAK,sBAAsB;IACrD,MAAMC,gBAAS,CAACE,MAAM,CAACH,KAAKD;AAC9B;AAEO,eAAeN,cAAcK,MAAc,EAAEM,MAAc;IAChE,MAAMJ,MAAM,CAAC,KAAK,EAAEF,OAAO,MAAM,CAAC;IAClC,MAAMG,gBAAS,CAACC,IAAI,CAACF,KAAKI;AAC5B;AAEO,eAAeP,mBAAmBC,MAAc,EAAEM,MAAc;IACrE,MAAMJ,MAAM,CAAC,KAAK,EAAEF,OAAO,MAAM,CAAC;IAClC,MAAMG,gBAAS,CAACI,IAAI,CAACL,KAAKI;AAC5B;AAEO,eAAeT,WAAWG,MAAc;IAC7C,MAAMG,gBAAS,CAACK,GAAG,CAAC,CAAC,KAAK,EAAER,OAAO,MAAM,CAAC;IAC1C,MAAMG,gBAAS,CAACK,GAAG,CAAC,CAAC,KAAK,EAAER,OAAO,MAAM,CAAC;AAC5C;AAEO,eAAeF,aAAaE,MAAc;IAC/C,OAAO,MAAMG,gBAAS,CAACM,QAAQ,CAAC,CAAC,KAAK,EAAET,OAAO,MAAM,CAAC;AACxD"}